@model Comca_Internacional_3._0.Models.Asistencia
@{
    ViewBag.Title = "Asistencia";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!DOCTYPE html>
<link href="~/Content/Reloj.css" rel="stylesheet" />

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Asistencia</title>
</head>
<body>
    <div class="container">
        <div class="row">
            <div class="col-4 text-center" style="margin: 50px 0px 0px 0px">
                <a class="button">Cambiar Color</a>
            </div>
            <div class="col-6">
                <div id="clock" class="light" style="margin:30px 0px 0px 300px">
                    <div class="display">
                        <div class="weekdays"></div>
                        <div class="ampm"></div>
                        <div class="alarm"></div>
                        <div class="digits"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="container" style="margin:60px 7px 2px 4px">
        <div class="row">
            <div class="col-md-6">
                <div class="modal-dialog" style=" margin: 30px 7px 2px 4px">
                    <h4>CONTROL DE ASISTENCIA</h4>
                    <div class="card mx-3 mt-n5 shadow-lg" style="border-radius: 10px; border-left: 8px #007bff solid; border-right: none; border-top: none; border-bottom: none; width: 30rem; ">
                        <div class="card-body">
                            <h4 class="card-title mb-3 text-primary text-uppercase">INGRESE DUI:</h4>
                            <form method="post" action="/Home/Asistencia" style="margin: 0px 0px 0px 30px">
                                @using (Html.BeginForm())
                                {
                                    <div class="row">
                                        <div class="form-group">
                                            @Html.LabelFor(x => x.Rutina, new { @class = "help-block text-muted small-font" })
                                            @Html.DropDownListFor(x => x.Rutina, (new MultiSelectList(new[] { "Oficina", "Teletrabajo" })), (new { @class = "form-control" }))
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(x => x.fecha, new { @class = "help-block text-muted small-font" })
                                            <div class="form-floating mb-3">
                                                <div class="col-xs-8">
                                                    <div class="input-group">
                                                        <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                                                        @Html.TextBoxFor(x => x.fecha, new { @id = "fecha", @readonly = "readonly", @class = "form-control " })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    @Html.LabelFor(x => x.DUI, new { @class = "help-block text-muted small-font" })
                                    <div class="form-floating mb-3">
                                        @Html.TextBoxFor(x => x.DUI, new { @class = "form-control" })
                                        @Html.ValidationMessage("DUI", new { @class = "text-danger" })
                                        <label  name="mensaje"></label>
                                    </div>
                                    <button type="submit" class="btn btn-primary">Marcar</button>
                                }
                            </form>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div>
                    <table class="display compact" id="Mostrar_Asistencia" style="width: 100% ">
                        <thead>
                            <tr>
                                <th>Nombre</th>
                                <th>Hora Entrada</th>
                                <th>Hora Salida</th>
                            </tr>
                        </thead>
                    </table>
                </div>

            </div>
        </div>
    </div>

    <!-- JavaScript Includes -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/1.10.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.0.0/moment.min.js"></script>
    @section scripts{
        <script>
            document.addEventListener('DOMContentLoaded', () => {

                const dateInput = document.getElementById('fecha')
                // formato ISO yyyy-mm-ddThh:mm:ss.ffffff
                dateInput.value = new Date().toISOString() // fecha actual en formato iso
                    // seleccionamos lo que esta a la izquierda de la T, que es la parte de la fecha
                    .split('T')[0]

            })
            $(function () {

                // Cache some selectors

                var clock = $('#clock'),
                    alarm = clock.find('.alarm'),
                    ampm = clock.find('.ampm');

                // Map digits to their names (this will be an array)
                var digit_to_name = 'zero one two three four five six seven eight nine'.split(' ');

                // This object will hold the digit elements
                var digits = {};

                // Positions for the hours, minutes, and seconds
                var positions = [
                    'h1', 'h2', ':', 'm1', 'm2', ':', 's1', 's2'
                ];

                // Generate the digits with the needed markup,
                // and add them to the clock

                var digit_holder = clock.find('.digits');

                $.each(positions, function () {

                    if (this == ':') {
                        digit_holder.append('<div class="dots">');
                    }
                    else {

                        var pos = $('<div>');

                        for (var i = 1; i < 8; i++) {
                            pos.append('<span class="d' + i + '">');
                        }

                        // Set the digits as key:value pairs in the digits object
                        digits[this] = pos;

                        // Add the digit elements to the page
                        digit_holder.append(pos);
                    }

                });

                // Add the weekday names

                var weekday_names = 'SUN MON TUE WED THU FRI SAT'.split(' '),
                    weekday_holder = clock.find('.weekdays');

                $.each(weekday_names, function () {
                    weekday_holder.append('<span>' + this + '</span>');
                });

                var weekdays = clock.find('.weekdays span');

                // Run a timer every second and update the clock

                (function update_time() {

                    // Use moment.js to output the current time as a string
                    // hh is for the hours in 12-hour format,
                    // mm - minutes, ss-seconds (all with leading zeroes),
                    // d is for day of week and A is for AM/PM

                    var now = moment().format("hhmmssdA");

                    digits.h1.attr('class', digit_to_name[now[0]]);
                    digits.h2.attr('class', digit_to_name[now[1]]);
                    digits.m1.attr('class', digit_to_name[now[2]]);
                    digits.m2.attr('class', digit_to_name[now[3]]);
                    digits.s1.attr('class', digit_to_name[now[4]]);
                    digits.s2.attr('class', digit_to_name[now[5]]);

                    // The library returns Sunday as the first day of the week.
                    // Stupid, I know. Lets shift all the days one position down,
                    // and make Sunday last

                    var dow = now[6];
                    dow--;

                    // Sunday!
                    if (dow < 0) {
                        // Make it last
                        dow = 6;
                    }

                    // Mark the active day of the week
                    weekdays.removeClass('active').eq(dow).addClass('active');

                    // Set the am/pm text:
                    ampm.text(now[7] + now[8]);

                    // Schedule this function to be run again in 1 sec
                    setTimeout(update_time, 1000);

                })();

                // Switch the theme

                $('a.button').click(function () {
                    clock.toggleClass('light dark');
                });

            });


            //Mostart el Listado de Asistencia
                $(document).ready(function () {
                    $('#Mostrar_Asistencia').DataTable({
            "ajax": {
                "url": '@Url.Action("AsistenciasDiarias", "Home")',
                "type": "GET",
                "datatype": "json",
                "order": [5,'desc']
            },
            "columns": [
                { "data": "Nombre" },
                { "data": "HoraEntrada" },
                { "data": "HoraSalida" },
            ],
            "language":{
                url: "https://cdn.datatables.net/plug-ins/1.12.1/i18n/es-ES.json"
            }
        });
    });
        </script>
    }
</body>
</html>





